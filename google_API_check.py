#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets API
–£–∂–µ –≤ –≤–µ—Ä—Ç–∫–µ master
"""

import os
import sys
from gsheets import validate_gs_credentials, upload_to_google_sheets
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s [%(levelname)s] %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)
logger = logging.getLogger('gs-diagnostic')


def check_environment_variables():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("=" * 50)
    print("–ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("=" * 50)

    required_vars = [
        'GS_TYPE', 'GS_PROJECT_ID', 'GS_PRIVATE_KEY_ID', 'GS_PRIVATE_KEY',
        'GS_CLIENT_EMAIL', 'GS_CLIENT_ID', 'GS_AUTH_URI', 'GS_TOKEN_URI',
        'GS_SPREADSHEET_ID'
    ]

    missing = []
    present = []

    for var in required_vars:
        value = os.getenv(var)
        if value:
            present.append(var)
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            if 'KEY' in var or 'ID' in var:
                display_value = value[:10] + "..." if len(value) > 10 else value
            else:
                display_value = value
            print(f"‚úÖ {var}: {display_value}")
        else:
            missing.append(var)
            print(f"‚ùå {var}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê")

    print(f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {len(present)}/{len(required_vars)} –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

    if missing:
        print(f"\n‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: {', '.join(missing)}")
        return False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ placeholder –∑–Ω–∞—á–µ–Ω–∏–π
    project_id = os.getenv('GS_PROJECT_ID', '')
    if project_id.startswith('your-'):
        print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã placeholder –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("–ó–∞–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ .env —Ñ–∞–π–ª–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç Google API")
        return False

    print("\n‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    return True


def test_credentials_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("\n" + "=" * 50)
    print("–ü–†–û–í–ï–†–ö–ê –í–ê–õ–ò–î–ê–¶–ò–ò –£–ß–ï–¢–ù–´–• –î–ê–ù–ù–´–•")
    print("=" * 50)

    try:
        validate_gs_credentials()
        print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {str(e)}")
        return False


def test_google_sheets_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets"""
    print("\n" + "=" * 50)
    print("–¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö GOOGLE SHEETS")
    print("=" * 50)

    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π CSV —Ñ–∞–π–ª
    import tempfile
    import csv

    try:
        with tempfile.NamedTemporaryFile(mode='w', suffix='.csv', delete=False, encoding='utf-8') as f:
            writer = csv.writer(f, delimiter=';')
            writer.writerow(['FlatType', 'Area_m2', 'Section', 'FloorNum', 'StoreyName', 'FlatNumber'])
            writer.writerow(['1–°', '45,5', '1', '1', '–≠—Ç–∞–∂ 1', '1'])
            writer.writerow(['2–°', '62,3', '1', '1', '–≠—Ç–∞–∂ 1', '2'])
            test_csv_path = f.name

        print(f"üìÑ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π CSV —Ñ–∞–π–ª: {test_csv_path}")

        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ Google Sheets
        print("üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Google Sheets...")
        sheet_url = upload_to_google_sheets(test_csv_path, "diagnostic_test.ifc")

        if sheet_url:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤ Google Sheets!")
            print(f"üîó URL —Ç–∞–±–ª–∏—Ü—ã: {sheet_url}")
            return True
        else:
            print("‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å - –ø–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π URL")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")
        print(f"üìã –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
        error_str = str(e).lower()

        if "permission" in error_str or "forbidden" in error_str:
            print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ")
            print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞—Å—à–∞—Ä–µ–Ω–∞ –¥–ª—è email —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
            print(f"   3. Email —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞: {os.getenv('GS_CLIENT_EMAIL', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")

        elif "not found" in error_str:
            print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å GS_SPREADSHEET_ID")
            print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            print(f"   3. –¢–µ–∫—É—â–∏–π ID —Ç–∞–±–ª–∏—Ü—ã: {os.getenv('GS_SPREADSHEET_ID', '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù')}")

        elif "credential" in error_str or "auth" in error_str:
            print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å JSON –∫–ª—é—á–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
            print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤")
            print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –∞–∫—Ç–∏–≤–µ–Ω –≤ Google Cloud")

        return False

    finally:
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        try:
            if 'test_csv_path' in locals():
                os.unlink(test_csv_path)
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {test_csv_path}")
        except Exception:
            pass


def check_dotenv_file():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ .env —Ñ–∞–π–ª–∞"""
    print("\n" + "=" * 50)
    print("–ü–†–û–í–ï–†–ö–ê .ENV –§–ê–ô–õ–ê")
    print("=" * 50)

    env_path = '.env'
    if os.path.exists(env_path):
        print(f"‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω: {os.path.abspath(env_path)}")

        # –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏–π)
        try:
            with open(env_path, 'r', encoding='utf-8') as f:
                lines = f.readlines()

            print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏—Ç {len(lines)} —Å—Ç—Ä–æ–∫")

            vars_in_file = []
            for line_num, line in enumerate(lines, 1):
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    var_name = line.split('=')[0].strip()
                    vars_in_file.append(var_name)
                    print(f"   {line_num}: {var_name}=...")
                elif line.startswith('#'):
                    print(f"   {line_num}: # –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π")
                elif line:
                    print(f"   {line_num}: {line}")

            print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ {len(vars_in_file)} –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–µ")
            return True

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è .env —Ñ–∞–π–ª–∞: {str(e)}")
            return False
    else:
        print(f"‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤: {os.path.abspath('')}")
        print("\nüí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ Google Sheets API")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê GOOGLE SHEETS API")
    print("=" * 60)

    results = {
        'env_file': check_dotenv_file(),
        'env_vars': check_environment_variables(),
        'validation': test_credentials_validation(),
        'connection': False
    }

    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—à–ª–∏
    if results['env_vars'] and results['validation']:
        results['connection'] = test_google_sheets_connection()
    else:
        print("\n‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")

    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 60)

    tests = [
        ('–§–∞–π–ª .env', results['env_file']),
        ('–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è', results['env_vars']),
        ('–í–∞–ª–∏–¥–∞—Ü–∏—è —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö', results['validation']),
        ('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets', results['connection'])
    ]

    for test_name, test_result in tests:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if test_result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{test_name:<30} {status}")

    passed_tests = sum(results.values())
    total_tests = len(results)

    print(f"\n–û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {passed_tests}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")

    if passed_tests == total_tests:
        print("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! Google Sheets API –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π Google Sheets API.")
        print("\nüìù –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å GS_SPREADSHEET_ID")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Google Sheets API –≤–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç–µ")


if __name__ == "__main__":
    main()